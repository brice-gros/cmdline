# This file is automatically generated using `_update_git_alias`. Do not edit it directly.
# User must call once `git config --global include.path ~/cmdline/.gitconfig`
[alias]
	branch-info = "!f() { bash -c \"source ~/cmdline/source-core.sh ; source ~/cmdline/source-git.sh ; git_branch_info $@ \" ; }; f"
	checkout-submodule-included = "!f() { bash -c \"source ~/cmdline/source-core.sh ; source ~/cmdline/source-git.sh ; git_checkout_submodule_included $@ \" ; }; f"
	chmod-staged = "!f() { bash -c \"source ~/cmdline/source-core.sh ; source ~/cmdline/source-git.sh ; git_chmod_staged $@ \" ; }; f"
	clone-for-worktree = "!f() { bash -c \"source ~/cmdline/source-core.sh ; source ~/cmdline/source-git.sh ; git_clone_for_worktree $@ \" ; }; f"
	current-branch = "!f() { bash -c \"source ~/cmdline/source-core.sh ; source ~/cmdline/source-git.sh ; git_current_branch $@ \" ; }; f"
	daemon-subfolders = "!f() { bash -c \"source ~/cmdline/source-core.sh ; source ~/cmdline/source-git.sh ; git_daemon_subfolders $@ \" ; }; f"
	describe = "!f() { bash -c \"source ~/cmdline/source-core.sh ; source ~/cmdline/source-git.sh ; git_describe $@ \" ; }; f"
	diff-ui = "!f() { bash -c \"source ~/cmdline/source-core.sh ; source ~/cmdline/source-git.sh ; git_diff_ui $@ \" ; }; f"
	diff-ui-head = "!f() { bash -c \"source ~/cmdline/source-core.sh ; source ~/cmdline/source-git.sh ; git_diff_ui_head $@ \" ; }; f"
	diff-ui-uncommitted = "!f() { bash -c \"source ~/cmdline/source-core.sh ; source ~/cmdline/source-git.sh ; git_diff_ui_uncommitted $@ \" ; }; f"
	fetch-prune-all = "!f() { bash -c \"source ~/cmdline/source-core.sh ; source ~/cmdline/source-git.sh ; git_fetch_prune_all $@ \" ; }; f"
	fetch-submodule-included = "!f() { bash -c \"source ~/cmdline/source-core.sh ; source ~/cmdline/source-git.sh ; git_fetch_submodule_included $@ \" ; }; f"
	graph = "!f() { bash -c \"source ~/cmdline/source-core.sh ; source ~/cmdline/source-git.sh ; git_graph $@ \" ; }; f"
	hash = "!f() { bash -c \"source ~/cmdline/source-core.sh ; source ~/cmdline/source-git.sh ; git_hash $@ \" ; }; f"
	local-prune = "!f() { bash -c \"source ~/cmdline/source-core.sh ; source ~/cmdline/source-git.sh ; git_local_prune $@ \" ; }; f"
	log-plain = "!f() { bash -c \"source ~/cmdline/source-core.sh ; source ~/cmdline/source-git.sh ; git_log_plain $@ \" ; }; f"
	ls-staged = "!f() { bash -c \"source ~/cmdline/source-core.sh ; source ~/cmdline/source-git.sh ; git_ls_staged $@ \" ; }; f"
	pull-submodule-included = "!f() { bash -c \"source ~/cmdline/source-core.sh ; source ~/cmdline/source-git.sh ; git_pull_submodule_included $@ \" ; }; f"
	rename-branch-remote-n-local = "!f() { bash -c \"source ~/cmdline/source-core.sh ; source ~/cmdline/source-git.sh ; git_rename_branch_remote_n_local $@ \" ; }; f"
	revert-workdir-all = "!f() { bash -c \"source ~/cmdline/source-core.sh ; source ~/cmdline/source-git.sh ; git_revert_workdir_all $@ \" ; }; f"
	revert-workdir-keep-untrack = "!f() { bash -c \"source ~/cmdline/source-core.sh ; source ~/cmdline/source-git.sh ; git_revert_workdir_keep_untrack $@ \" ; }; f"
	rewrite-branch-users = "!f() { bash -c \"source ~/cmdline/source-core.sh ; source ~/cmdline/source-git.sh ; git_rewrite_branch_users $@ \" ; }; f"
	show-files-only = "!f() { bash -c \"source ~/cmdline/source-core.sh ; source ~/cmdline/source-git.sh ; git_show_files_only $@ \" ; }; f"
	status-modified-only = "!f() { bash -c \"source ~/cmdline/source-core.sh ; source ~/cmdline/source-git.sh ; git_status_modified_only $@ \" ; }; f"
	status-staged-modified = "!f() { bash -c \"source ~/cmdline/source-core.sh ; source ~/cmdline/source-git.sh ; git_status_staged_modified $@ \" ; }; f"
	status-staged-only = "!f() { bash -c \"source ~/cmdline/source-core.sh ; source ~/cmdline/source-git.sh ; git_status_staged_only $@ \" ; }; f"
	submodule-rm = "!f() { bash -c \"source ~/cmdline/source-core.sh ; source ~/cmdline/source-git.sh ; git_submodule_rm $@ \" ; }; f"
	unapply-index = "!f() { bash -c \"source ~/cmdline/source-core.sh ; source ~/cmdline/source-git.sh ; git_unapply_index $@ \" ; }; f"
	worktrees = "!f() { bash -c \"source ~/cmdline/source-core.sh ; source ~/cmdline/source-git.sh ; git_worktrees $@ \" ; }; f"
